name: Deploy React App to AWS Amplify

on:
  push:
    branches:
      - main # Trigger the workflow on push to the main branch

env:
  NAME: 'react_setup'
  REGION: 'eu-central-1'
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: echo NVMRC=$(cat .nvmrc) >> $GITHUB_OUTPUT
        id: nvm

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build # This job runs after the build job is successfully completed

    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.REGION}}

      - name: Get AWS app name and appId
        id: amplify
        shell: bash
        run: |
          res=$(aws amplify list-apps --output text --query "apps[?not_null(name == '${{ env.NAME }}')].name")
          if [ -z "$res" ]; then
            echo "Project ${{ env.NAME }} not exist"
            exit 1
          else
            echo id=$(aws amplify list-apps --output text --query "apps[?not_null(name == '${{ env.NAME }}')].appId") >> $GITHUB_OUTPUT
          fi

      - name: Start AWS Amplify Job
        id: amplify_job
        run: echo id=$(aws amplify start-job --app-id ${{ steps.amplify.outputs.id }}
          --branch-name $BRANCH_NAME
          --job-type RELEASE
          --output text
          --query "jobSummary.jobId") >> $GITHUB_OUTPUT

      - name: Check Amplify Job Status
        run: |
          while [[ "$(aws amplify get-job --app-id ${{ steps.amplify.outputs.id }} \
                                          --branch-name $BRANCH_NAME \
                                          --job-id ${{ steps.amplify_job.outputs.id }} \
                                          --output text \
                                          --query "job.summary.status")" =~ ^(RUNNING|PENDING)$ ]]; do sleep 10; done
      - id: res
        if: always()
        shell: bash
        run: |
          status=$(aws amplify get-job --app-id ${{ steps.amplify.outputs.id }} \
                                       --branch-name $BRANCH_NAME \
                                       --job-id ${{ steps.amplify_job.outputs.id }} \
                                       --output text --query 'job.summary.status')
          echo "status=$status" >> $GITHUB_OUTPUT
          if [[ $status != "SUCCEED" ]]; then exit 1; fi
